 R←Test_13(stopFlag batchFlag);path;cmd;rc;⎕TRAP;list;home;trap
⍝ Test "SetTrap" with defaults
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←∆Failed

 :If batchFlag
     R←¯1
 :Else
⍝ Preconditions...
     home←'Errors'                  ⍝ Because we want to test the defaults...
     :If 'WIN'≡#.APLTreeUtils.Uppercase #.APLTreeUtils.GetOperatingSystem ⍬
         home←#.FilesAndDirs.NormalizePath'%LOCALAPPDATA%','/',(1⊃⎕NPARTS ⎕WSID),'\Errors'
     :Else
         home←#.FilesAndDirs.PWD,'/Errors'
     :EndIf
     {}#.FilesAndDirs.RmDir home
     {}'CREATE!'#.FilesAndDirs.CheckPath home
     #.FilesAndDirs.DeleteFile'CONTINUE.DWS'

     ⎕TRAP←1 ##.HandleError.SetTrap ⍬
     trap←0⊃⎕TRAP                   ⍝ However, we need to inject...
     (2⊃trap)←'999 ',2⊃trap         ⍝ ... a signal into ⎕Trap ...
     ⎕TRAP←(999 'E' '→⎕LC+1')trap   ⍝ ... for a restart
     {.}&⍬                          ⍝ Causes an error that will be handled by HandleError.Process
     ⎕DL 0.2
     ⎕TRAP←(0 1000)'S'
     →GoToTidyUp 0=#.FilesAndDirs.Exists home
     →GoToTidyUp 0=⍴list←#.FilesAndDirs.ListFiles home,'\*'
     →GoToTidyUp∨/('-'~⍨10↑#.APLTreeUtils.FormatDateTime ⎕TS)∘≢¨{8↑⍵↓⍨1+⍵⍳'_'}¨{1⊃⎕NPARTS ⍵}¨list

     #.⎕SHADOW'HandleErrorParms'
     #.HandleErrorParms←##.HandleError.CreateParms
     #.HandleErrorParms.addToMsg←'Hey there'
     #.HandleErrorParms.createHTML←0
     #.HandleErrorParms.errorFolder←home,'Sub\'
     {}'CREATE!'#.FilesAndDirs.CheckPath home,'\Sub'
     #.HandleErrorParms.signal←999
     ⎕TRAP←(⊂999 'E' '→∆CarryOn'),1 ##.HandleError.SetTrap'#.HandleErrorParms'
     .                              ⍝ Cause a crash
     ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
     →GoToTidyUp 1

∆CarryOn:
     ⎕TRAP←(0 1000)'S'
     →GoToTidyUp 0=⍴#.FilesAndDirs.ListFiles #.HandleErrorParms.errorFolder

     :Trap 11
         ##.HandleError.SetTrap ⎕NS''
         →FailsIf 1
     :Else
                                    ⍝ Fine
     :EndTrap

     :Trap 11
         ##.HandleError.SetTrap 1 2 3
         →FailsIf 1
     :Else
                                    ⍝ Fine
     :EndTrap

     :Trap 11
         ##.HandleError.SetTrap'name1' 'name2'
         →FailsIf 1
     :Else
                                    ⍝ Fine
     :EndTrap

     R←∆OK

∆TidyUp:
     {}#.FilesAndDirs.RmDir home
     #.FilesAndDirs.DeleteFile'CONTINUE.DWS'
 :EndIf
